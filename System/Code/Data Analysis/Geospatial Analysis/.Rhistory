knitr::opts_chunk$set(echo = TRUE)
packages = c('sp', 'rgdal', 'sf', 'tidyverse', 'tmap', 'ggplot2','stringr', 'maptools', 'raster', 'spatstat', 'sfheaders')
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
mpsz = st_read(dsn = "data/geospatial", layer = "MP14_SUBZONE_WEB_PL")
csisg <- read_csv("data/aspatial/agg_clustering_perception.csv")
mpsz_3414 <- st_set_crs(mpsz, 3414)
mpsz = st_read(dsn = "data/geospatial", layer = "MP14_SUBZONE_WEB_PL")
agg_clusters <- read_csv("data/aspatial/agg_clustering_perception.csv")
View(agg_clusters)
View(mpsz_3414)
mpsz_3414_PA <- mpsz_3414 %>%
group_by("PLN_AREA_N")
View(mpsz_3414_PA)
mpsz_3414_PA <- mpsz_3414 %>%
group_by(PLN_AREA_N)
View(mpsz_3414)
#remove location == "Prefer not to say"
agg_clusters[agg_clusters$location != "Prefer not to say", ]
agg_clusters <- agg_clusters %>%
#remove location == "Prefer not to say"
subset(location != "Prefer not to say")
View(mpsz_3414)
agg_clusters <- agg_clusters %>%
#remove location == "Prefer not to say"
subset(location != "Prefer not to say")
agg_clusters_CLEAN <- agg_clusters %>%
#change to upper CAPS for location
toupper(location, region) %>%
dplyr::select(2, 5:6, 29)
agg_clusters <- agg_clusters %>%
#remove location == "Prefer not to say"
subset(location != "Prefer not to say")
agg_clusters_CLEAN <- agg_clusters %>%
#change to upper CAPS for location
toupper(location) %>%
toupper(region) %>%
dplyr::select(2, 5:6, 29)
agg_clusters_CLEAN <- agg_clusters %>%
#change to upper CAPS for location
toupper(agg_clusters$location) %>%
toupper(agg_clusters$region) %>%
#remove unwanted columns
dplyr::select(2, 5:6, 29)
packages = c('sp', 'rgdal', 'sf', 'tidyverse', 'tmap', 'ggplot2','stringr', 'maptools', 'raster', 'spatstat', 'sfheaders', 'dplyr')
for(p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
agg_clusters <- agg_clusters %>%
#remove location == "Prefer not to say"
subset(location != "Prefer not to say")
agg_clusters_CLEAN <- agg_clusters %>%
#change to upper CAPS for location
mutate(LOCATION = toupper(location)) %>%
mutate(REGION = toupper(region)) %>%
#remove unwanted columns
dplyr::select(2, 29:31)
View(agg_clusters_CLEAN)
agg_clusters_CLEAN$LOCATION <- gsub("KALLANG / WHAMPAO", "KALLANG", agg_clusters_CLEAN$LOCATION)
agg_clusters_CLEAN$LOCATION <- gsub("CENTRAL AREA / CBD", "DOWNTOWN CORE", agg_clusters_CLEAN$LOCATION)
resident_edu <- read_csv("data/aspatial/(Education) Students Aged 5 Years and Over by Planning Area (2020).csv")
resident_edu <- na.omit(resident_edu)
#resident_edu$`Planning Area of Residence CAPS` = toupper(resident_edu$`Planning Area of Residence`)
resident_edu <- resident_edu %>%
mutate(`Planning Area of Residence CAPS` = toupper(`Planning Area of Residence`)) %>%
dplyr::select('Planning Area of Residence CAPS', 'Polytechnic Diploma', 'Professional Qualification and Other Diploma', 'University')
resident_edu <- resident_edu %>%
mutate(`Total` = rowSums(.[2:4])) %>%
dplyr::select('Planning Area of Residence CAPS', 'Total')
View(resident_edu)
resident_edu <- read_csv("data/aspatial/(Education) Students Aged 5 Years and Over by Planning Area (2020).csv")
resident_edu <- na.omit(resident_edu)
tertiary_students <- resident_edu %>%
mutate(`Planning Area of Residence CAPS` = toupper(`Planning Area of Residence`)) %>%
dplyr::select('Planning Area of Residence CAPS', 'Polytechnic Diploma', 'Professional Qualification and Other Diploma', 'University')
tertiary_students <- tertiary_students %>%
mutate(`Total` = rowSums(.[2:4])) %>%
dplyr::select('Planning Area of Residence CAPS', 'Total')
mpsz_3414_plnarea <- mpsz_3414 %>%
group_by(PLN_AREA_N) %>%
summarise()
View(mpsz_3414_plnarea)
#merge with mpsz_3414
mpsz_3414_agg_clusters <- left_join(mpsz_3414_plnarea, agg_clusters_CLEAN, by = c("PLN_AREA_N" = "LOCATION"))
View(mpsz_3414_agg_clusters)
cluster0_mpsz3414 <- mpsz_3414_agg_clusters %>%
filter(cluster == 0)
View(cluster0_mpsz3414)
cluster0_mpsz3414 <- mpsz_3414_agg_clusters %>%
filter(cluster == 0) %>%
mutate(count = 1)
cluster0_mpsz3414_PAfreq <- cluster0_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n))
View(cluster0_mpsz3414_PAfreq)
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("Freq", style = "quantile", n = 6, title = "Cluster 0: Frequency of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) #+ tm_text("PLN_AREA_N", size = 0.2)
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq", style = "quantile", n = 6, title = "Cluster 0: Frequency of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) #+ tm_text("PLN_AREA_N", size = 0.2)
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq", style = "quantile", n = 8, title = "Cluster 0: Frequency of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq", style = "quantile", n = 8, title = "Cluster 0: Frequency of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) + tm_text("PLN_AREA_N", size = 0.2)
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq", style = "quantile", n = 8, title = "Cluster 0: Frequency of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
cluster0_mpsz3414_PAfreq <- cluster0_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n)) %>%
mutate(freq_percentage = scales::percent(freq/318))
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq_percentage", style = "quantile", n = 6, title = "Cluster 0: Frequency of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
cluster0_mpsz3414_PAfreq <- cluster0_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n)) %>%
mutate(freq_percentage = scales::percent(freq/318, accuracy=0.001))
#Map Visual
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq_percentage", style = "quantile", n = 6, title = "Cluster 0: Frequency of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq_percentage", style = "jenks", n = 6, title = "Cluster 0: Frequency of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
cluster0_mpsz3414_PAfreq <- cluster0_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n)) %>%
mutate(freq_percentage = round(freq/318*100, 2))
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq_percentage", style = "jenks", n= 8, title = "Cluster 0: Percentage of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
tmap_mode("view")
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq_percentage", style = "jenks", n= 8, title = "Cluster 0: Percentage of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq_percentage", style = "jenks", n= 6, title = "Cluster 0: Percentage of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
View(tertiary_students)
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n)) %>%
#Percentage of respondents of Cluster 0 by Plan Area
#scales::percent(freq/318, accuracy=0.001))
mutate(freq_percentage = round(freq/318*100, 2))
View(cluster0_mpsz3414_PAfreq_Wpop)
cluster0_mpsz3414_PAfreq_Wpop <- left_join(cluster0_mpsz3414_PAfreq_Wpop, tertiary_students, by = c("PLN_AREA_N" = "Planning Area of Residence CAPS"))
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414_PAfreq_Wpop %>%
mutate(predicted_numbers = freq_percentage*Total)
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414_PAfreq_Wpop %>%
replace_na(predicted_numbers, 0)
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414_PAfreq_Wpop %>%
replace_na(`predicted_numbers`, 0)
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414_PAfreq_Wpop %>%
replace(predicted_numbers, is.na(predicted_numbers), 0)
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414_PAfreq_Wpop %>%
mutate(predicted_numbers, is.na(predicted_numbers), 0)
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414_PAfreq_Wpop %>%
replace(is.na(predicted_numbers), 0)
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414_PAfreq_Wpop %>%
replace(is.na(), 0)
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n)) %>%
#Percentage of respondents of Cluster 0 by Plan Area
#scales::percent(freq/318, accuracy=0.001))
mutate(freq_percentage = round(freq/318*100, 2))
#merge with Tertiary Student Population
cluster0_mpsz3414_PAfreq_Wpop <- left_join(cluster0_mpsz3414_PAfreq_Wpop, tertiary_students, by = c("PLN_AREA_N" = "Planning Area of Residence CAPS"))
#Predict Actual Numbers of Tertiary Students in Cluster 0
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414_PAfreq_Wpop %>%
mutate(predicted_numbers = freq_percentage*Total)
cluster0_mpsz3414_PAfreq_Wpop$predicted_numbers[is.na(cluster0_mpsz3414_PAfreq_Wpop$predicted_numbers)] <- 0
View(cluster0_mpsz3414_PAfreq_Wpop)
tmap_mode("view")
tm_shape(cluster0_mpsz3414_PAfreq_Wpop) + tm_fill("predicted_numbers", style = "jenks", n= 6, title = "Cluster 0: Percentage of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n)) %>%
#Percentage of respondents of Cluster 0 by Plan Area
#scales::percent(freq/318, accuracy=0.001))
mutate(freq_percentage = round(freq/318*100, 2))
#merge with Tertiary Student Population
cluster0_mpsz3414_PAfreq_Wpop <- left_join(cluster0_mpsz3414_PAfreq_Wpop, tertiary_students, by = c("PLN_AREA_N" = "Planning Area of Residence CAPS"))
#Predict Actual Numbers of Tertiary Students in Cluster 0
cluster0_mpsz3414_PAfreq_Wpop <- cluster0_mpsz3414_PAfreq_Wpop %>%
mutate(predicted_numbers = freq_percentage/100*Total)
#replace NA = 0
cluster0_mpsz3414_PAfreq_Wpop$predicted_numbers[is.na(cluster0_mpsz3414_PAfreq_Wpop$predicted_numbers)] <- 0
#Map Visual
tmap_mode("view")
tm_shape(cluster0_mpsz3414_PAfreq_Wpop) + tm_fill("predicted_numbers", style = "jenks", n= 6, title = "Cluster 0: Percentage of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
View(agg_clusters_CLEAN)
#Cluster 1
cluster1_mpsz3414 <- mpsz_3414_agg_clusters %>%
filter(cluster == 1) %>%
mutate(count = 1)
#Frequency of No. of Respondents in each Plan Area
cluster1_mpsz3414_PAfreq <- cluster1_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n)) %>%
#Percentage of respondents of Cluster 0 by Plan Area
#scales::percent(freq/318, accuracy=0.001))
mutate(freq_percentage = round(freq/318*100, 2))
tmap_mode("view")
#cluster 0
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq_percentage", style = "jenks", n= 6, title = "Cluster 0: Percentage of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
#cluster 1
tm_shape(cluster1_mpsz3414_PAfreq) + tm_fill("freq_percentage", style = "jenks", n= 6, title = "Cluster 1: Percentage of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
#Cluster 2
cluster2_mpsz3414 <- mpsz_3414_agg_clusters %>%
filter(cluster == 2) %>%
mutate(count = 1)
#Frequency of No. of Respondents in each Plan Area
cluster2_mpsz3414_PAfreq <- cluster2_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n)) %>%
#Percentage of respondents of Cluster 2 by Plan Area
#scales::percent(freq/318, accuracy=0.001))
mutate(freq_percentage = round(freq/318*100, 2))
#Map Visual
tmap_mode("view")
#Cluster 0
tm_shape(cluster0_mpsz3414_PAfreq) + tm_fill("freq_percentage", style = "jenks", n= 6, title = "Cluster 0: Percentage of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
#Cluster 1
tm_shape(cluster1_mpsz3414_PAfreq) + tm_fill("freq_percentage", style = "jenks", n= 6, title = "Cluster 1: Percentage of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
#Cluster 2
tm_shape(cluster2_mpsz3414_PAfreq) + tm_fill("freq_percentage", style = "jenks", n= 6, title = "Cluster 2: Percentage of Respondents") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
#Cluster 1
#Frequency of No. of Respondents in each Plan Area
cluster1_mpsz3414_PAfreq_Wpop <- cluster1_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n)) %>%
#Percentage of respondents of Cluster 0 by Plan Area
#scales::percent(freq/318, accuracy=0.001))
mutate(freq_percentage = round(freq/318*100, 2))
#merge with Tertiary Student Population
cluster1_mpsz3414_PAfreq_Wpop <- left_join(cluster1_mpsz3414_PAfreq_Wpop, tertiary_students, by = c("PLN_AREA_N" = "Planning Area of Residence CAPS"))
#Predict Actual Numbers of Tertiary Students in Cluster 1
cluster1_mpsz3414_PAfreq_Wpop <- cluster1_mpsz3414_PAfreq_Wpop %>%
mutate(predicted_numbers = freq_percentage/100*Total)
#replace NA = 0
cluster1_mpsz3414_PAfreq_Wpop$predicted_numbers[is.na(cluster1_mpsz3414_PAfreq_Wpop$predicted_numbers)] <- 0
#Map Visual
tmap_mode("view")
#Cluster 0
tm_shape(cluster0_mpsz3414_PAfreq_Wpop) + tm_fill("predicted_numbers", style = "jenks", n= 6, title = "Cluster 0: Predicted Numbers of Tertiary Students") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
#Cluster 1
tm_shape(cluster1_mpsz3414_PAfreq_Wpop) + tm_fill("predicted_numbers", style = "jenks", n= 6, title = "Cluster 1: Predicted Numbers of Tertiary Students") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
cluster1_mpsz3414_PAfreq_Wpop <- cluster1_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n)) %>%
#Percentage of respondents of Cluster 0 by Plan Area
#scales::percent(freq/318, accuracy=0.001))
mutate(freq_percentage = round(freq/318*100, 2))
View(cluster1_mpsz3414_PAfreq_Wpop)
cluster1_mpsz3414_PAfreq_Wpop <- left_join(cluster1_mpsz3414_PAfreq_Wpop, tertiary_students, by = c("PLN_AREA_N" = "Planning Area of Residence CAPS"))
cluster1_mpsz3414_PAfreq_Wpop <- cluster1_mpsz3414_PAfreq_Wpop %>%
mutate(predicted_numbers = freq_percentage/100*Total)
#replace NA = 0
cluster1_mpsz3414_PAfreq_Wpop$predicted_numbers[is.na(cluster1_mpsz3414_PAfreq_Wpop$predicted_numbers)] <- 0
#Cluster 2
#Frequency of No. of Respondents in each Plan Area
cluster2_mpsz3414_PAfreq_Wpop <- cluster2_mpsz3414 %>%
group_by(PLN_AREA_N) %>%
count(PLN_AREA_N, count) %>%
mutate(freq = ifelse(is.na(count), NA, n)) %>%
#Percentage of respondents of Cluster 2 by Plan Area
#scales::percent(freq/318, accuracy=0.001))
mutate(freq_percentage = round(freq/318*100, 2))
#merge with Tertiary Student Population
cluster2_mpsz3414_PAfreq_Wpop <- left_join(cluster2_mpsz3414_PAfreq_Wpop, tertiary_students, by = c("PLN_AREA_N" = "Planning Area of Residence CAPS"))
#Predict Actual Numbers of Tertiary Students in Cluster 1
cluster2_mpsz3414_PAfreq_Wpop <- cluster2_mpsz3414_PAfreq_Wpop %>%
mutate(predicted_numbers = freq_percentage/100*Total)
View(cluster2_mpsz3414_PAfreq_Wpop)
View(cluster0_mpsz3414_PAfreq_Wpop)
#Map Visual
tmap_mode("view")
#Cluster 0
tm_shape(cluster0_mpsz3414_PAfreq_Wpop) + tm_fill("predicted_numbers", style = "jenks", n= 6, title = "Cluster 0: Predicted Numbers of Tertiary Students") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
#Cluster 1
tm_shape(cluster1_mpsz3414_PAfreq_Wpop) + tm_fill("predicted_numbers", style = "jenks", n= 6, title = "Cluster 1: Predicted Numbers of Tertiary Students") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
#Cluster 2
tm_shape(cluster2_mpsz3414_PAfreq_Wpop) + tm_fill("predicted_numbers", style = "jenks", n= 6, title = "Cluster 2: Predicted Numbers of Tertiary Students") + tm_shape(mpsz_3414) + tm_borders(lwd = 0.1, alpha = 1) + tm_legend(legend.outside=TRUE) #+ tm_text("PLN_AREA_N", size = 0.2)
